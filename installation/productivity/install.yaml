---
- name: Install Utility VM's softwares
  hosts: all
  become: true
  vars:
      - skip: false


  tasks:


  
    # Git & System Setup
    - block:
        - name: Creates directory
          ansible.builtin.file:
            path: /root/mssoftware
            state: directory
        - name: Checking out MS Software Archittecture Repo
          ansible.builtin.git:
            repo: 'https://github.com/MincomGithub/MS-Software-Architecture.git'
            dest: ~/mssoftware
        
      rescue:
        - name: rescue task that runs on setup fail
          ansible.builtin.debug:
            msg: "Task Rescued"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "Setup tasks done!" 


    # uptime kuma
    - block:

        - name: Remove container
          community.docker.docker_container:
            name: baserow
            state: absent

        - name: Re-create a redis container
          docker_container:
            name: baserow
            image: baserow/baserow:1.20.0
            state: started
            detach: yes
            recreate: yes
            restart: yes
            restart_policy: unless-stopped
            ports:
              - "7201:80"
              - "7202:443"
            volumes:
              - baserow_data:/baserow/data 
            env:
              BASEROW_PUBLIC_URL: "http://146.190.144.209"

        - name: Allow all access to 7201
          ufw:
            rule: allow
            port: 7201
            
      when: not skip|bool
      rescue:
        - name: rescue task that runs if any task fails inside block
          ansible.builtin.debug:
            msg: "Task Rescued padloc"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "This task will always run at the end - padloc" 




    # # baserow
    # - block:
    #     - name: Creates baserow directory
    #       ansible.builtin.file:
    #         path: ~/baserow
    #         state: directory

    #     - name: Docker command to pull down
    #       ansible.builtin.command:
    #         chdir: ~/mssoftware/utility/baserow
    #         cmd: docker-compose down

    #     - name: Docker command to bring up
    #       ansible.builtin.command:
    #         chdir: ~/mssoftware/utility/baserow
    #         cmd: docker-compose up -d

    #     - name: Allow all access to 7103
    #       ufw:
    #         rule: allow
    #         port: 7101
            
    #   when: skip|bool
    #   rescue:
    #     - name: rescue task that runs if any task fails inside block
    #       ansible.builtin.debug:
    #         msg: "Task Rescued baserow"
            
    #   always:
    #     - name: This task always runs at the end regardless of outcome
    #       ansible.builtin.debug:
    #         msg: "This task will always run at the end - baserow" 




    # # nginxproxymanager
    # - block:

    #     - name: Docker command to pull down
    #       ansible.builtin.command:
    #         chdir: ~/mssoftware/utility/nginxproxymanager
    #         cmd: docker-compose down

    #     - name: Docker command to bring up
    #       ansible.builtin.command:
    #         chdir: ~/mssoftware/utility/nginxproxymanager
    #         cmd: docker-compose up -d

    #     - name: Allow all access to 7103
    #       ufw:
    #         rule: allow
    #         port: 7103
            
    #   when: skip|bool   
    #   rescue:
    #     - name: rescue task that runs if any task fails inside block
    #       ansible.builtin.debug:
    #         msg: "Task Rescued padloc"
            
    #   always:
    #     - name: This task always runs at the end regardless of outcome
    #       ansible.builtin.debug:
    #         msg: "This task will always run at the end - padloc" 


            


