---
- name: Install Utility VM's softwares
  hosts: all
  become: true
  vars:
      - skip: false


  tasks:

  
    # Git & System Setup
    - block:
        - name: Creates directory
          ansible.builtin.file:
            path: /root/mssoftware
            state: directory
        - name: Checking out MS Software Archittecture Repo
          ansible.builtin.git:
            repo: 'https://github.com/MincomGithub/MS-Software-Architecture.git'
            dest: ~/mssoftware
        
      when: not skip|bool
      rescue:
        - name: rescue task that runs on setup fail
          ansible.builtin.debug:
            msg: "Task Rescued"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "Setup tasks done!" 


    # Airbyte
    - block:

        - name: Clone Airbyte from GitHub
          git:
            repo: 'https://github.com/airbytehq/airbyte.git'
            dest: ~/airbyte
            depth: 1

        - name: Start Airbyte
          ansible.builtin.command:
            chdir: ~/airbyte
            cmd: ./run-ab-platform.sh

        - name: Allow all access to 8000
          ufw:
            rule: allow
            port: 8000
            
      when: skip|bool
      rescue:
        - name: rescue task that runs if any task fails inside block
          ansible.builtin.debug:
            msg: "Task Rescued padloc"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "This task will always run at the end - padloc" 



    # Airflow
    - block:

        - name: Creates airflow directory
          ansible.builtin.file:
            path: ~/airflow
            state: directory

        - name: Fetching airflow's docker-compose.yaml.
          ansible.builtin.command:
            chdir: ~/airflow
            cmd: curl -LfO 'https://airflow.apache.org/docs/apache-airflow/2.0.2/docker-compose.yaml'

        - name: Initializing Environment
          ansible.builtin.command:
            chdir: ~/airflow
            cmd: |
              mkdir ./dags ./logs ./plugins
              echo -e "AIRFLOW_UID=$(id -u)\nAIRFLOW_GID=0" > .env

        - name: Docker init Airflow
          ansible.builtin.command:
            chdir: ~/airflow
            cmd: docker-compose up airflow-init

        - name: Docker command to bring up
          ansible.builtin.command:
            chdir: ~/airflow
            cmd: docker-compose up -d

        - name: Allow all access to 8080
          ufw:
            rule: allow
            port: 8080
            
      when: not skip|bool
      rescue:
        - name: rescue task that runs if any task fails inside block
          ansible.builtin.debug:
            msg: "Task Rescued Airflow"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "This task will always run at the end - Airflow" 




