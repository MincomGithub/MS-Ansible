---
- name: Install Utility VM's softwares
  hosts: all
  become: true
  vars:
      - skip: false


  tasks:

  
    # Git & System Setup
    - block:
        - name: Creates directory
          ansible.builtin.file:
            path: /root/mssoftware
            state: directory
        - name: Checking out MS Software Archittecture Repo
          ansible.builtin.git:
            repo: 'https://github.com/MincomGithub/MS-Software-Architecture.git'
            dest: ~/mssoftware
        
      when: not skip|bool
      rescue:
        - name: rescue task that runs on setup fail
          ansible.builtin.debug:
            msg: "Task Rescued"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "Setup tasks done!" 


    # MySQL
    - block:

        - name: Remove MySQL container
          community.docker.docker_container:
            name: mysql
            state: absent

        - name: Re-create a MySQL container
          docker_container:
            name: mysql
            image: mysql
            state: started
            detach: yes
            recreate: yes
            restart: yes
            restart_policy: always
            ports:
              - "3307:3306"
            volumes:
              - /etc/docker/test-mysql:/etc/mysql/conf.d
              - final-mysql-data:/var/lib/mysql
            env:
              MYSQL_ROOT_PASSWORD: "strong_password"

        - name: Allow all access to 3307
          ufw:
            rule: allow
            port: 3307
            
      when: not skip|bool
      rescue:
        - name: rescue task that runs if any task fails inside block
          ansible.builtin.debug:
            msg: "Task Rescued MySQL"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "This task will always run at the end - MySQL" 


    # POSTGRES
    - block:

        - name: Remove POSTGRESS container
          community.docker.docker_container:
            name: postgres
            state: absent

        - name: Re-create a POSTGRESS container
          docker_container:
            name: postgres
            image: postgres:14.1-alpine
            state: started
            detach: yes
            recreate: yes
            restart: yes
            restart_policy: always
            ports:
              - "5432:5432"
            volumes:
              - /tmp:/var/lib/postgresql/data
            env:
              POSTGRES_USER: "postgres"
              POSTGRES_PASSWORD: "strong_password"
              PGDATA: "/var/lib/postgresql/data/pgdata"

        - name: Allow all access to 3307
          ufw:
            rule: allow
            port: 3307
            
      when: not skip|bool
      rescue:
        - name: rescue task that runs if any task fails inside block
          ansible.builtin.debug:
            msg: "Task Rescued POSTGRESS"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "This task will always run at the end - POSTGRESS" 


    # MongoDB
    - block:

        - name: Remove MongoDB container
          community.docker.docker_container:
            name: mongodb
            state: absent

        - name: Re-create a MongoDB container
          docker_container:
            name: mongodb
            image: mongodb/mongodb-community-server:latest
            state: started
            detach: yes
            recreate: yes
            restart: yes
            restart_policy: always
            ports:
              - "27017:27017"
            volumes:
              - mongo_volume:/data/db
            env:
              POSTGRES_USER: "postgres"
              MONGO_INITDB_ROOT_USERNAME: "mongo"
              MONGO_INITDB_ROOT_PASSWORD: "strong_password"

        - name: Allow all access to 3307
          ufw:
            rule: allow
            port: 3307
            
      when: not skip|bool
      rescue:
        - name: rescue task that runs if any task fails inside block
          ansible.builtin.debug:
            msg: "Task Rescued MongoDB"
            
      always:
        - name: This task always runs at the end regardless of outcome
          ansible.builtin.debug:
            msg: "This task will always run at the end - MongoDB" 



